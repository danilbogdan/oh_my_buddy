version: '3.8'

volumes:
  postgres_data: {}


services:

  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  redis:
    image: redis:7
    ports:
      - 6379:6379

  app:
    image: app
    build:
        context: .
        dockerfile: docker/Dockerfile
    restart: "unless-stopped"
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    logging:
      driver: syslog
      options:
        syslog-address: ${LOGS}
        tag: "app"

  ngrok:
    image: ngrok/ngrok:latest
    command:
      - "http"
      - "http://app:8000"
    depends_on:
      - app
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - 4040:4040

  frontend:
    image: app
    build:
        context: .
        dockerfile: docker/Dockerfile
    restart: "unless-stopped"
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    command: streamlit run streamlit_app.py
    ports:
      - 8501:8501
